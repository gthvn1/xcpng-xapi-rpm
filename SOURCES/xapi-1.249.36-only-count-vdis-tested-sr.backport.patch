From 0e0ef8180d0a695ec3e2dc5e0b875d8b54f43ebf Mon Sep 17 00:00:00 2001
From: BenjiReis <benjamin.reis@vates.fr>
Date: Fri, 6 Oct 2023 12:20:00 +0200
Subject: [PATCH] Only count VDIs on tested SRs

When using `-sr` or `-default-sr` only
count VDIs on those SR to check for leak
VDIs.

Signed-off-by: BenjiReis <benjamin.reis@vates.fr>
---
 ocaml/quicktest/qt_filter.ml | 38 ++++++++++++++++++++++++++----------
 1 file changed, 28 insertions(+), 10 deletions(-)

diff --git a/ocaml/quicktest/qt_filter.ml b/ocaml/quicktest/qt_filter.ml
index 7d5a11e9aad..44af7d09652 100644
--- a/ocaml/quicktest/qt_filter.ml
+++ b/ocaml/quicktest/qt_filter.ml
@@ -25,31 +25,49 @@ let count_vdis rpc session_id sr =
   in
   List.length managed_vdis

+let get_test_sr_uuid () =
+  match (!A.use_default_sr, !A.sr) with
+  | true, _ ->
+      let pool = Qt.get_pool !A.rpc !session_id in
+      let sr =
+        Client.Client.Pool.get_default_SR ~rpc:!A.rpc ~session_id:!session_id
+          ~self:pool
+      in
+      Client.Client.SR.get_uuid ~rpc:!A.rpc ~session_id:!session_id ~self:sr
+  | _, uuid when uuid <> "" ->
+      uuid
+  | _, _ ->
+      ""
+
 (** Called before the quicktests start to save the original state.
     This data will be used by [finish] to check for any resource leaks. *)
 let init () =
   session_id := Qt.init_session !A.rpc !A.username !A.password ;
+  let test_sr_uuid = get_test_sr_uuid () in
   Client.Client.SR.get_all_records ~rpc:!A.rpc ~session_id:!session_id
   |> List.iter (fun (ref, sr) ->
-         if List.mem `scan sr.API.sR_allowed_operations then
-           let before = count_vdis !A.rpc !session_id ref in
-           Hashtbl.add vdi_count sr.API.sR_uuid before
+         if test_sr_uuid = "" || sr.API.sR_uuid = test_sr_uuid then
+           if List.mem `scan sr.API.sR_allowed_operations then
+             let before = count_vdis !A.rpc !session_id ref in
+             Hashtbl.add vdi_count sr.API.sR_uuid before
      )

 (** Called at the end of the quicktests to check that no resources leaked
     during the test run *)
 let finish () =
+  let test_sr_uuid = get_test_sr_uuid () in
   Client.Client.SR.get_all_records ~rpc:!A.rpc ~session_id:!session_id
   |> List.iter (fun (ref, sr) ->
          match Hashtbl.find_opt vdi_count sr.API.sR_uuid with
          | Some before ->
-             if List.mem `scan sr.API.sR_allowed_operations then
-               let after = count_vdis !A.rpc !session_id ref in
-               if after <> before then
-                 failwith
-                   (Printf.sprintf "VDIs leaked on SR %s: before=%d, after=%d"
-                      sr.API.sR_uuid before after
-                   )
+             if test_sr_uuid = "" || sr.API.sR_uuid = test_sr_uuid then
+               if List.mem `scan sr.API.sR_allowed_operations then
+                 let after = count_vdis !A.rpc !session_id ref in
+                 if after <> before then
+                   failwith
+                     (Printf.sprintf "VDIs leaked on SR %s: before=%d, after=%d"
+                        sr.API.sR_uuid before after
+                     )
          | None ->
              ()
      )

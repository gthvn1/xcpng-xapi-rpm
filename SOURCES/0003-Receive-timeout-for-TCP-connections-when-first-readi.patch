From 35a26269c03348a00bad93b943d4dea980755dd8 Mon Sep 17 00:00:00 2001
From: Rob Hoes <rob.hoes@citrix.com>
Date: Fri, 8 Jul 2022 10:24:27 +0000
Subject: [PATCH 3/5] Receive timeout for TCP connections when first reading
 HTTP headers

When a connection to xapi's TCP socket is established, no authentication
has taken place until the HTTP request has been received. We need to
treat these connections with some more care until then.

To protect against unauthenticated clients holding connections open
without actually making any calls, a read timeout (10 seconds by
default) is introduced for every read from the socket until all headers
have been read. An HTTP 408 "request timeout" response is returned and
the connection broken if a timeout occurs.

Signed-off-by: Rob Hoes <rob.hoes@citrix.com>
(cherry picked from commit a9c054a07b7186b123cd6887dcd20d3076bc5346)
---
 ocaml/xapi/xapi_globs.ml      | 4 ++++
 ocaml/xapi/xapi_mgmt_iface.ml | 5 +++--
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/ocaml/xapi/xapi_globs.ml b/ocaml/xapi/xapi_globs.ml
index 9fb924545..30d506da2 100644
--- a/ocaml/xapi/xapi_globs.ml
+++ b/ocaml/xapi/xapi_globs.ml
@@ -877,6 +877,9 @@ let sqlite3 = ref "/usr/bin/sqlite3"
 
 let samba_dir = "/var/lib/samba"
 
+let header_read_timeout_tcp = ref 10.
+(* Timeout in seconds for every read while reading HTTP headers (on TCP only) *)
+
 let conn_limit_tcp = ref 800
 
 let conn_limit_unix = ref 1024
@@ -954,6 +957,7 @@ let xapi_globs_spec =
   ; ( "winbind_update_closest_kdc_interval"
     , Float winbind_update_closest_kdc_interval
     )
+  ; ("header_read_timeout_tcp", Float header_read_timeout_tcp)
   ; ("conn_limit_tcp", Int conn_limit_tcp)
   ; ("conn_limit_unix", Int conn_limit_unix)
   ]
diff --git a/ocaml/xapi/xapi_mgmt_iface.ml b/ocaml/xapi/xapi_mgmt_iface.ml
index c8aee582f..a12fffebf 100644
--- a/ocaml/xapi/xapi_mgmt_iface.ml
+++ b/ocaml/xapi/xapi_mgmt_iface.ml
@@ -113,8 +113,9 @@ let start ~__context ?addr () =
         )
       )
   in
-  Http_svr.start ~conn_limit:!Xapi_globs.conn_limit_tcp Xapi_http.server
-    socket ;
+  Http_svr.start
+    ~header_read_timeout:!Xapi_globs.header_read_timeout_tcp
+    ~conn_limit:!Xapi_globs.conn_limit_tcp Xapi_http.server socket ;
   management_interface_server := socket :: !management_interface_server ;
   restart_stunnel ~__context ~accept ;
   if Pool_role.is_master () && addr = None then
-- 
2.31.1

